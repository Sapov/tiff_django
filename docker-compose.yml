version: '2'

services:
  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"

  postgres_db:
    image: postgres:15
    container_name: postgres_db
    volumes:
      - ~/.pg/pg_data/django:/var/lib/postgresql/data
    env_file:
      - .env
    restart: always

  django_project:
    build:
      dockerfile: Dockerfile
      context: .
    image: django_docker:latest
    container_name: django_docker
    depends_on:
      - postgres_db
    volumes:
      - ~/django/static_volume:/django/static
      - ~/django/media_volume:/django/media
    env_file:
      - .env
    environment:
      - VIRTUAL_HOST=${ALLOWED_HOST}
      - LETSENCRYPT_HOST=${ALLOWED_HOST}

    command: >
      bash -c "./manage.py collectstatic --noinput && ./manage.py makemigrations && ./manage.py migrate  && ./manage.py add_test_data && ./manage.py add_price && gunicorn -b 0.0.0.0:8000 mysite.wsgi:application"
    restart: always

  worker:
    restart: always
    build: .
    volumes:
      - ~/django/:/app
      - ~/django/static_volume:/django/static
      - ~/django/media_volume:/django/media
    depends_on:
      - redis
      - django_project
    command: 'celery -A mysite worker -l info'

  nginx:
    build:
      dockerfile: ./Dockerfile
      context: ./docker/nginx/
    container_name: nginx_for_django
    image: nginx_for_django
    volumes:
      - ~/django/static_volume:/django/static
      - ~/django/media_volume:/django/media
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro

    depends_on:
      - postgres_db
    ports:
      - "${NGINX_EXTERNAL_PORT}:80"
      - "${NGINX_EXTERNAL_SSL_PORT}:443"

    restart: always

  acme_companion:
    image: nginxproxy/acme-companion:2.2
    container_name: acme_companion
    volumes_from:
      - nginx
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme:/etc/acme.sh

volumes:
  certs:
  vhost:
  html:
  acme:
